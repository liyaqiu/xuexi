<?xml version="1.0" encoding="utf-8" ?>
<configuration scan="true" scanPeriod="1 seconds" debug="false">
    <!--属性-->
    <property name="geshi" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %c %m%n"/>
    <property name="lujing" value="logs"/>
    <!--
        输出格式
        %d{yyyy-MM-dd HH:mm:ss.SSS}日期
        %-5level 向左对齐5个字节
        %thread 线程
        %c类的完整名称
        %m或者%msg 内容
        %n换行
        %M 方法名
        %L 行号
      -->
    <!--输出控制-->
    <appender name="kongzhitai" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${geshi}</pattern>
        </encoder>
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            &lt;!&ndash;注意：只允许INFO数据进来，其他一律过滤掉&ndash;&gt;-->
<!--            <level>INFO</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
    </appender>
    <!--普通输出文件-->
    <appender name="wenjian" class="ch.qos.logback.core.FileAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${geshi}</pattern>
        </encoder>
        <file>${lujing}/slf4j.txt</file>
    </appender>
    <!--输出文件 以html的格式输出-->
    <appender name="htmlwenjian" class="ch.qos.logback.core.FileAppender">
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout class="ch.qos.logback.classic.html.HTMLLayout">
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}%level%thread%c%m</pattern>
            </layout>
        </encoder>
        <file>${lujing}/slf4j.html</file>
    </appender>
    <!-- 归档文件输出 -->
    <appender name="guidangwenjian" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${lujing}/guidangslf4j.txt</file>
        <encoder>
            <pattern>${geshi}</pattern>
        </encoder>
        <!--按照时间+文件大小 超过文件大小归档或者超过时间也归档-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 按时间+文件大小归档 可以以txt zip tar做相应的压缩-->
            <fileNamePattern>${lujing}/guidang.%d{yyyy-MM-dd}---%i.txt</fileNamePattern>
            <!-- 每个文件大小 -->
            <maxFileSize>100mb</maxFileSize>
            <maxHistory>3</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--异步log 需要结合原始的appender进行使用-->
    <appender name="asynlog_guidangwenjian" class="ch.qos.logback.classic.AsyncAppender">
        <!--指定具体的appender-->
        <appender-ref ref="guidangwenjian"/>
    </appender>
    <appender name="asynlog_kongzhitai" class="ch.qos.logback.classic.AsyncAppender">
        <!--指定具体的appender-->
        <appender-ref ref="kongzhitai"/>
    </appender>
    <root level="ERROR">
        <appender-ref ref="kongzhitai"/>
<!--        <appender-ref ref="guidangwenjian"/>-->
<!--        <appender-ref ref="asynlog_guidangwenjian"/>-->
<!--        <appender-ref ref="wenjian"/>-->
<!--        <appender-ref ref="htmlwenjian"/>-->
    </root>
    <!--子logger会【覆盖】父logger，并且会继承 appender 可以利用additivity=fasle取消继承-->
    <logger name="com.service" level="INFO" additivity="false">
        <appender-ref ref="asynlog_kongzhitai"/>
    </logger>
</configuration>